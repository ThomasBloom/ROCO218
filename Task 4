% simulate force controlled pendulum on cart using full non-linear model
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% all rights reserved
% Author: Dr. Ian Howard
% Associate Professor (Senior Lecturer) in Computational Neuroscience
% Centre for Robotics and Neural Systems
% Plymouth University
% A324 Portland Square
% PL4 8AA
% Plymouth, Devon, UK
% howardlab.com
% 23/01/2018
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

% clean up matlab before launching script
clear all
close all 
clc

% pendulum point mass
m = 0.314;

% cart mass
M = 2;

% pendulum length
L = 0.64;

% acceleration due to gravity
g = -9.8;

I = (1/12)*  m * (L^2);

% damping
d = 0.05;

% time steps of 100ms for integration
timeStep = 0.1;
% total time for simulation
totalTime = 10;
% build timepoint vector
tspan = 0:timeStep:totalTime;


titleMessage = 'uncontrolled nonlinear sim of FC pendulum on cart';
disp(titleMessage)


% initial conditions
% located at x=0
% velocity =0
% angle  pi (inverted)
% angular velocity = 0.5 rads-1
y0 = [0; 0.001;]; %pi/2; 0; Changing the numbers from 0 means there is now a small noise/push
Length = L^2;
p = I + (m * Length);
P = p^2;

A = [0 1; -((m*g*L)/p) (-d/p);]; %Change this to minus in order to invert the pendulum
B = [((m*L)/p); (-(d*m*L)/P);];

% use ode to solve with FCPendOnCart with no control force input u
% representing a force controlled pendulum on a cart
% model introduces slight amount of noise to wont stay balanced
[t,y] = ode45(@(t,y)SSSimulate(y, A, B, 0),tspan,y0);

% for all time point animate the results
range=1;
len = length(tspan);
kickFlag = zeros(1,len);

% get variables
x = 0 * y(:, 2);    % cart positon 0 stops, 1 moves
th = 1 * y(:, 1);   % pendulum angle

% animate pendulum
figure
%plot(t,y);
AnimatePendulumCart(th+pi,  x, L/2, tspan, range, kickFlag, titleMessage); %Equilibrium point is 0 (hanging down vertically). Add pi to it in order to make the pendulum stand up inverted.
